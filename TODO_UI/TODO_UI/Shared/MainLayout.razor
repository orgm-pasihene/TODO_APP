@using TODO_UI.Authentication
@inherits LayoutComponentBase
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<PageTitle>TODO_UI</PageTitle>

<div class="container">
    <h3 class="d-flex justify-content-center">To Do App</h3>

    <nav class="navbar navbar-expand-sm bg-light navbar-dark">
        <ul class="navbar-nav">
            <li class="nav-item">
                <button class="m-1 btn btn-light btn-outline-primary" Button>
                    <NavLink href="">
                        Home
                    </NavLink>
                </button>
            </li>

            <AuthorizeView Roles="Administrator">
                <Authorized>
                    <li class="nav-item">
                        <button class="m-1 btn btn-light btn-outline-primary" Button>
                            <NavLink href="user">
                                Users
                            </NavLink>
                        </button>
                    </li>
                </Authorized>
             </AuthorizeView>

            <AuthorizeView Roles="Administrator, User">
                <Authorized>
                    <li class="nav-item">
                        <button class="m-1 btn btn-light btn-outline-primary" Button>
                            <NavLink href="tasks">
                                Task
                            </NavLink>
                        </button>
                    </li>
                </Authorized>
            </AuthorizeView>  
        </ul>

        <div class="top-row px-4">        
            <AuthorizeView>
                <Authorized>
                    <a @onclick="Logout" href="javascript:void(0)">Logout</a>
                </Authorized>

                <NotAuthorized>
                    <a href="/login">Login</a>
                </NotAuthorized>
            </AuthorizeView>
        
        </div>

    </nav>
    @Body
</div>

@code{
    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        navManager.NavigateTo("/", true);
    }
}